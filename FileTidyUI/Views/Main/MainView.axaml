<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:FileTidyUI.ViewModels"
             xmlns:views="clr-namespace:FileTidyUI.Views.Main"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="FileTidyUI.Views.Main.MainView"
             x:DataType="vm:MainViewModel">
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

  <DockPanel>
    <Border Height="38" BorderBrush="Black" BorderThickness="0" DockPanel.Dock="Top">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="100" />
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ComboBox x:Name="fileType" ItemsSource="{Binding FileTypeKeys}" SelectedItem="{Binding SelectedFileTypeKey, Mode=TwoWay}" Grid.Column="0" Margin="1" VerticalAlignment="Center" Width="100" ToolTip.Tip="Select File Type" MaxDropDownHeight="100">
        </ComboBox>
        <TextBox x:Name="chaosFolderPathTB" Text="{Binding ChaosFolderPath}"  Grid.Column="1" Margin="1" Watermark="Chaos Folder" VerticalAlignment="Center" IsReadOnly="True" IsHitTestVisible="False"></TextBox>
        <Button x:Name="choasFolderSelectBtn" Command = "{Binding SelectChaosFolderCommand}" CommandParameter="{Binding $parent[Window]}" Grid.Column="2" Margin="1" ToolTip.Tip="Select Chaos Folder" VerticalAlignment="Center">
          <PathIcon Data="{StaticResource open_regular}"  />
        </Button>
        <Button x:Name="LoadFiles" Command="{Binding LoadFilesCommand}" Grid.Column="3" Margin="1" ToolTip.Tip="Load Files" VerticalAlignment="Center" Content="Load"/>
      </Grid>
    </Border>
    <Border Height="38" BorderBrush="Black" BorderThickness="1" DockPanel.Dock="Bottom">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="150" />
          <ColumnDefinition Width="100" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="100" />
        </Grid.ColumnDefinitions>
        <Label x:Name="progressBarLbl" Grid.Column="0" Content="Idle" VerticalAlignment="Center" IsVisible="False"></Label>
        <ProgressBar Grid.Column="1" x:Name="progressBar" Height="28" Margin="2" Minimum="0" Maximum="100" Value="0" IsIndeterminate="True" VerticalAlignment="Center" IsVisible="False"/>
        <Button Command="{Binding ExecuteButtonCommand}" x:Name="executeBtn" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="2" ToolTip.Tip="Execute Action">
          <PathIcon Data="{StaticResource rocket_regular}"  />
        </Button>
      </Grid>
    </Border>
    <TabControl x:Name="mainTabControl">
      <TabItem Header="Sorting" x:Name="sortingFilesTab">
          <views:SortView></views:SortView>
      </TabItem>
      <TabItem Header="Dupplicates" x:Name="dupeFileTab">
        <views:DupplicateView></views:DupplicateView>
      </TabItem>
      <TabItem Header="Settings" x:Name="settingsTab">
        <views:SettingsView></views:SettingsView>
      </TabItem>
    </TabControl>
    

  </DockPanel>
</UserControl>
